{"version":3,"file":"static/js/170.9c1768a0.chunk.js","mappings":"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","sources":["components/FavoritesCardModal/FavoritesCardModal.styled.jsx","components/FavoritesCardModal/FavoritesCardModal.jsx","pages/FavoritesPage/FavoritesPage.styled.jsx","pages/FavoritesPage/FavoritesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ModalCard = styled.div`\n  width: 1136px;\n  height: 628px;\n  display: flex;\n  gap: 48px;\n  justify-content: center;\n  flex-direction: row;\n  background-color: var(--primary-bg-color);\n`;\n\nexport const ModalAvatar = styled.div`\n  width: 120px;\n  height: 120px;\n  border: 3px solid var(--accent-bg-color);\n  border-radius: 100px;\n  background-color: var(--primary-bg-color);\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ModalAvatarImage = styled.div`\n  width: 96px;\n  height: 96px;\n  border-radius: 50%;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const ModalGreenDot = styled.img`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  top: 19px;\n  left: 85px;\n  border-radius: 50%;\n`;\n\nexport const ModalCardBlock = styled.div`\n  width: 968px;\n  height: 628px;\n  gap: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const ModalInfoBlock = styled.div`\n  width: 968px;\n  height: 238px;\n  gap: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const ModalCardInfo = styled.div`\n  width: 968px;\n  height: 150px;\n  gap: 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 0px;\n`;\n\nexport const ModalCardHeader = styled.div`\n  width: 968px;\n  height: 56px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ModalTeacherName = styled.div`\n  height: 26px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: center;\n  font-family: Roboto;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const ModalBlockHeader = styled.div`\n  width: 697px;\n  height: 26px;\n  display: flex;\n  gap: 8px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const SpanText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const SpanDiv = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: rgba(18, 20, 23, 0.2);\n`;\n\nexport const SpanPrice = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: #38cd3e;\n  margin-right: 58px;\n`;\n\nexport const ModalCardBody = styled.div`\n  width: 968px;\n  height: 88px;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const ModalSpeaks = styled.div`\n  width: 984px;\n  height: 24px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    color: #8a8a89;\n    text-decoration: none;\n  }\n\n  .underline-text {\n    text-decoration: underline;\n  }\n`;\n\nexport const ModalLesson = styled.div`\n  width: 968px;\n  height: 24px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    text-align: left;\n    color: #8a8a89;\n  }\n`;\n\nexport const ModalExp = styled.div`\n  width: 968px;\n  max-height: 120px; \n  overflow-y: auto; \n  display: flex;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const ModalCardFooter = styled.div`\n  width: 968px;\n  height: 32px;\n  gap: 8px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const ModalLevelTag = styled.div`\n  height: 32px;\n  gap: 4px;\n  border: 1px solid rgba(18, 20, 23, 0.2);\n  border-radius: 35px;\n  padding: 8px 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 16px;\n  text-align: left;\n  font-size: 14px;\n  font-weight: 500;\n  color: #121417;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  background-color: ${({ highlighted }) =>\n    highlighted ? \"var(--btn-icon-bg)\" : \"transparent\"};\n\n  &:focus {\n    border-color: var(--btn-hover-bg);\n    cursor: pointer;\n    outline: none;\n  }\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const BookButton = styled.button`\n  all: unset;\n  display: block;\n  opacity: 0px;\n  width: 232px;\n  height: 60px;\n  border-radius: 12px;\n  background-color: var(--btn-icon-bg);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n  text-align: center;\n  color: var(--text-color);\n  cursor: pointer;\n  &:focus {\n    border-color: var(--btn-hover-bg);\n    outline: none;\n  }\n  &:hover {\n    background-color: var(--btn-hover-bg);\n  }\n`;\n\nexport const FavoriteIcon = styled.img`\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { removeFavourite } from \"../../redux/favouritesSlice\";\nimport {\n  ModalExp,\n  ModalCard,\n  ModalCardBlock,\n  ModalInfoBlock,\n  ModalCardHeader,\n  ModalTeacherName,\n  ModalBlockHeader,\n  ModalCardInfo,\n  ModalCardBody,\n  ModalSpeaks,\n  ModalLesson,\n  ModalCardFooter,\n  ModalAvatar,\n  ModalAvatarImage,\n  ModalGreenDot,\n  ModalLevelTag,\n  BookButton,\n  SpanText,\n  SpanDiv,\n  SpanPrice,\n  FavoriteIcon,\n} from \"./FavoritesCardModal.styled\";\nimport HeartOn from \"../../assets/svg/heartOn.svg\";\nimport Star from \"../../assets/svg/Star.svg\";\nimport Book from \"../../assets/svg/book-open-01.svg\";\nimport GreenDotImage from \"../../assets/svg/Group 82.svg\";\nimport Modal from \"../Modal/Modal\";\nimport Review from \"../Review/Review\";\nimport Lesson from \"../Lesson/Lesson\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst FavoritesCardModal = ({ teacher, onClose, selectedLevel }) => {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const [isBookShown, setIsBookShown] = useState(false);\n\n  const toggleFavorite = (teacher) => {\n    if (!isAuthenticated) {\n      toast.error(\"This functionality is available only to authorized users.\");\n      return;\n    }\n    dispatch(removeFavourite(teacher));\n  };\n\n  return (\n    <Modal\n      width={1240}\n      height={692}\n      onClose={onClose}\n      top=\"50%\"\n      left=\"50%\"\n      border=\"none\"\n      background=\"rgba(0, 0, 0, 0.5)\"\n    >\n      <ModalCard>\n        <ModalAvatar>\n          <ModalAvatarImage src={teacher.avatar_url} />\n          <ModalGreenDot src={GreenDotImage} alt=\"green dot\" />\n        </ModalAvatar>\n        <ModalCardBlock>\n          <ModalInfoBlock>\n            <ModalCardInfo>\n              <ModalCardHeader>\n                <ModalTeacherName>\n                  {teacher.name} {teacher.surname}\n                </ModalTeacherName>\n                <ModalBlockHeader>\n                  <img src={Book} width=\"16\" height=\"16\" alt=\"open book\" />\n                  <SpanText>Lessons online</SpanText>\n                  <SpanDiv> | </SpanDiv>\n                  <SpanText>Lessons done:</SpanText> {teacher.lessons_done}\n                  <SpanDiv> | </SpanDiv>\n                  <SpanText>Rating:</SpanText>{\" \"}\n                  <img src={Star} width=\"16\" height=\"16\" alt=\"star\" />\n                  {teacher.rating}\n                  <SpanDiv> | </SpanDiv>\n                  <SpanText>Price / 1 hour: </SpanText>{\" \"}\n                  <SpanPrice>{teacher.price_per_hour}$</SpanPrice>\n                  <FavoriteIcon\n                    src={HeartOn}\n                    width=\"26\"\n                    height=\"26\"\n                    alt=\"heart\"\n                    onClick={() => toggleFavorite(teacher)}\n                  />\n                </ModalBlockHeader>\n              </ModalCardHeader>\n              <ModalCardBody>\n                <ModalSpeaks>\n                  <span>Languages Speaks:</span>\n                  <div className=\"underline-text\">\n                    {Array.isArray(teacher.languages)\n                      ? teacher.languages.join(\", \")\n                      : teacher.languages}\n                  </div>\n                </ModalSpeaks>\n                <ModalLesson>\n                  <span>Lesson Info:</span> {teacher.lesson_info}\n                </ModalLesson>\n                <ModalLesson>\n                  <span>Conditions:</span> {teacher.conditions}\n                </ModalLesson>\n              </ModalCardBody>\n            </ModalCardInfo>\n            <ModalExp>{teacher.experience}</ModalExp>\n          </ModalInfoBlock>\n          <Review reviews={teacher.reviews} />\n          <ModalCardFooter>\n            {teacher.levels.map((level) => (\n              <ModalLevelTag key={level} highlighted={level === selectedLevel}>\n                {level}\n              </ModalLevelTag>\n            ))}\n          </ModalCardFooter>\n          <BookButton onClick={() => setIsBookShown(true)}>\n            Book trial lesson\n          </BookButton>\n        </ModalCardBlock>\n      </ModalCard>\n      {isBookShown && (\n        <Lesson\n          teacher={teacher}\n          onClose={onClose}\n          selectedLevel={selectedLevel}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default FavoritesCardModal;\n","//FavoritesPage.styled.jsx\nimport styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  background-color: var(--additional-bg-color);\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CardsContainer = styled.div`\n  width: 1200px;\n  max-height: 714px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 1184px;\n  height: 222px;\n  border-radius: 24px;\n  padding: 16px;\n  border: none;\n  gap: 48px;\n  margin-bottom: 16px;\n  color: var(--text-color);\n  background-color: var(--primary-bg-color);\n`;\n\nexport const Avatar = styled.div`\n  width: 120px;\n  height: 120px;\n  border: 3px solid var(--accent-bg-color);\n  border-radius: 100px;\n  background-color: var(--primary-bg-color);\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AvatarImage = styled.div`\n  width: 96px;\n  height: 96px;\n  border-radius: 50%;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const GreenDot = styled.img`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  top: 19px;\n  left: 85px;\n  border-radius: 50%;\n`;\n\nexport const LoadMoreButton = styled.button`\n  all: unset;\n  display: block;\n  width: 183px;\n  height: 60px;\n  border-radius: 12px;\n  background-color: var(--btn-icon-bg);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n  text-align: center;\n  color: var(--text-color);\n  cursor: pointer;\n  &:focus {\n    border-color: var(--btn-hover-bg);\n    outline: none;\n  }\n  &:hover {\n    background-color: var(--btn-hover-bg);\n  }\n`;\n\nexport const CardBlock = styled.div`\n  width: 984px;\n  height: 190px;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const InfoBlock = styled.div`\n  width: 984px;\n  height: 150px;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const CardInfo = styled.div`\n  width: 984px;\n  height: 118px;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 0px;\n`;\n\nexport const ReadMore = styled.div`\n  width: 78px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  text-decoration: underline;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const CardHeader = styled.div`\n  width: 984px;\n  height: 26px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TeacherName = styled.div`\n  height: 26px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: center;\n  font-family: Roboto;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const BlockHeader = styled.div`\n  width: 697px;\n  height: 26px;\n  display: flex;\n  gap: 8px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const SpanText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n`;\n\nexport const SpanDiv = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: rgba(18, 20, 23, 0.2);\n`;\n\nexport const SpanPrice = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: #38cd3e;\n  margin-right: 58px;\n`;\n\nexport const CardBody = styled.div`\n  width: 984px;\n  height: 88px;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Speaks = styled.div`\n  width: 984px;\n  height: 24px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    color: #8a8a89;\n    text-decoration: none;\n  }\n\n  .underline-text {\n    text-decoration: underline;\n  }\n`;\n\nexport const Lesson = styled.div`\n  width: 984px;\n  height: 24px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    text-align: left;\n    color: #8a8a89;\n  }\n`;\n\nexport const CardFooter = styled.div`\n  width: 984px;\n  height: 32px;\n  gap: 8px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const LevelTag = styled.div`\n  height: 32px;\n  gap: 4px;\n  border: 1px solid rgba(18, 20, 23, 0.2);\n  border-radius: 35px;\n  padding: 8px 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 16px;\n  text-align: left;\n  font-size: 14px;\n  font-weight: 500;\n  color: #121417;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  background-color: ${({ highlighted }) =>\n    highlighted ? \"var(--btn-icon-bg)\" : \"transparent\"};\n`;\n\nexport const FavoriteIcon = styled.img`\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","//FavoritesPage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { removeFavourite } from \"../../redux/favouritesSlice\";\nimport FavoritesCardModal from \"../../components/FavoritesCardModal/FavoritesCardModal\";\nimport {\n  PageContainer,\n  CardsContainer,\n  Card,\n  CardBlock,\n  InfoBlock,\n  CardHeader,\n  TeacherName,\n  BlockHeader,\n  CardInfo,\n  ReadMore,\n  CardBody,\n  Speaks,\n  Lesson,\n  CardFooter,\n  Avatar,\n  AvatarImage,\n  GreenDot,\n  LevelTag,\n  LoadMoreButton,\n  FavoriteIcon,\n  SpanText,\n  SpanDiv,\n  SpanPrice,\n} from \"./FavoritesPage.styled\";\nimport HeartOn from \"../../assets/svg/heartOn.svg\";\nimport Star from \"../../assets/svg/Star.svg\";\nimport Book from \"../../assets/svg/book-open-01.svg\";\nimport GreenDotImage from \"../../assets/svg/Group 82.svg\";\nimport HeaderPage from \"../HeaderPage/HeaderPage\";\nimport Filter from \"../../components/Filter/Filter\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst FavoritesPage = () => {\n  const dispatch = useDispatch();\n  const favouriteTeachers = useSelector(\n    (state) => state.favourites.favouriteTeachers\n  );\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const [filteredTeachers, setFilteredTeachers] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [prices, setPrices] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [selectedPrice, setSelectedPrice] = useState(\"\");\n  const [visibleStart, setVisibleStart] = useState(0);\n  const [visibleEnd, setVisibleEnd] = useState(3);\n  const [selectedTeacher, setSelectedTeacher] = useState(null);\n\n  useEffect(() => {\n    const favoriteTeachersArray = Object.values(favouriteTeachers);\n    setFilteredTeachers(favoriteTeachersArray);\n\n    const allLanguages = [\n      \"All\",\n      ...favoriteTeachersArray\n        .flatMap((teacher) => teacher.languages)\n        .filter((value, index, self) => self.indexOf(value) === index)\n        .sort(),\n    ];\n    setLanguages(allLanguages);\n\n    const allLevels = [\n      \"All\",\n      ...favoriteTeachersArray\n        .flatMap((teacher) => teacher.levels)\n        .filter((value, index, self) => self.indexOf(value) === index)\n        .sort(),\n    ];\n    setLevels(allLevels);\n\n    const allPrices = favoriteTeachersArray\n      .map((teacher) => teacher.price_per_hour)\n      .filter((value, index, self) => self.indexOf(value) === index)\n      .sort((a, b) => a - b);\n    setPrices(allPrices);\n  }, [favouriteTeachers]);\n\n  useEffect(() => {\n    let filtered = favouriteTeachers;\n\n    if (selectedLanguage && selectedLanguage !== \"All\") {\n      filtered = filtered.filter((teacher) =>\n        teacher.languages.includes(selectedLanguage)\n      );\n    }\n\n    if (selectedLevel && selectedLevel !== \"All\") {\n      filtered = filtered.filter((teacher) =>\n        teacher.levels.includes(selectedLevel)\n      );\n    }\n\n    if (selectedPrice) {\n      filtered = filtered.filter(\n        (teacher) => teacher.price_per_hour === selectedPrice\n      );\n    }\n\n    setFilteredTeachers(filtered);\n    setVisibleStart(0);\n    setVisibleEnd(4);\n  }, [selectedLanguage, selectedLevel, selectedPrice, favouriteTeachers]);\n\n  const handleLoadMore = () => {\n    if (visibleEnd < filteredTeachers.length) {\n      setVisibleEnd(visibleEnd + 4);\n    }\n  };\n\n  const handleReadMore = (teacher) => {\n    setSelectedTeacher(teacher);\n  };\n\n  const closeModal = () => {\n    setSelectedTeacher(null);\n  };\n\n  const toggleFavorite = (teacher) => {\n    if (!isAuthenticated) {\n      toast.error(\"This functionality is available only to authorized users.\");\n      return;\n    }\n    dispatch(removeFavourite(teacher));\n  };\n\n  return (\n    <PageContainer>\n      <HeaderPage />\n      <Filter\n        languages={languages}\n        levels={levels}\n        prices={prices}\n        selectedLanguage={selectedLanguage}\n        selectedLevel={selectedLevel}\n        selectedPrice={selectedPrice}\n        onSelectLanguage={setSelectedLanguage}\n        onSelectLevel={setSelectedLevel}\n        onSelectPrice={setSelectedPrice}\n      />\n      {filteredTeachers.length === 0 ? (\n        <p style={{ textAlign: \"center\" }}>\n          There are no teachers in the database that meet the search criteria.\n        </p>\n      ) : (\n        <CardsContainer>\n          {filteredTeachers.slice(visibleStart, visibleEnd).map((teacher) => (\n            <Card key={teacher.id}>\n              <Avatar>\n                <AvatarImage src={teacher.avatar_url} />\n                <GreenDot src={GreenDotImage} alt=\"green dot\" />\n              </Avatar>\n              <CardBlock>\n                <InfoBlock>\n                  <CardInfo>\n                    <CardHeader>\n                      <TeacherName>\n                        {teacher.name} {teacher.surname}\n                      </TeacherName>\n                      <BlockHeader>\n                        <img\n                          src={Book}\n                          width=\"16\"\n                          height=\"16\"\n                          alt=\"open book\"\n                        />\n                        <SpanText>Lessons online</SpanText>\n                        <SpanDiv> | </SpanDiv>\n                        <SpanText>Lessons done:</SpanText>{\" \"}\n                        {teacher.lessons_done}\n                        <SpanDiv> | </SpanDiv>\n                        <SpanText>Rating:</SpanText>{\" \"}\n                        <img src={Star} width=\"16\" height=\"16\" alt=\"star\" />\n                        {teacher.rating}\n                        <SpanDiv> | </SpanDiv>\n                        <SpanText>Price / 1 hour: </SpanText>{\" \"}\n                        <SpanPrice>{teacher.price_per_hour}$</SpanPrice>\n                        <FavoriteIcon\n                          src={HeartOn}\n                          width=\"26\"\n                          height=\"26\"\n                          alt=\"heart\"\n                          onClick={() => toggleFavorite(teacher)}\n                        />\n                      </BlockHeader>\n                    </CardHeader>\n                    <CardBody>\n                      <Speaks>\n                        <span>Languages Speaks:</span>\n                        <div className=\"underline-text\">\n                          {Array.isArray(teacher.languages)\n                            ? teacher.languages.join(\", \")\n                            : teacher.languages}\n                        </div>\n                      </Speaks>\n                      <Lesson>\n                        <span>Lesson Info:</span> {teacher.lesson_info}\n                      </Lesson>\n                      <Lesson>\n                        <span>Conditions:</span> {teacher.conditions}\n                      </Lesson>\n                    </CardBody>\n                  </CardInfo>\n                  <ReadMore onClick={() => handleReadMore(teacher)}>\n                    Read more\n                  </ReadMore>\n                </InfoBlock>\n                <CardFooter>\n                  {teacher.levels.map((level) => (\n                    <LevelTag key={level} highlighted={level === selectedLevel}>\n                      {level}\n                    </LevelTag>\n                  ))}\n                </CardFooter>\n              </CardBlock>\n            </Card>\n          ))}\n        </CardsContainer>\n      )}\n      {visibleEnd < filteredTeachers.length && (\n        <LoadMoreButton onClick={handleLoadMore}>Load more</LoadMoreButton>\n      )}\n      {selectedTeacher && (\n        <FavoritesCardModal\n          teacher={selectedTeacher}\n          onClose={closeModal}\n          selectedLevel={selectedLevel}\n        />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["ModalCard","styled","ModalAvatar","ModalAvatarImage","props","src","ModalGreenDot","ModalCardBlock","ModalInfoBlock","ModalCardInfo","ModalCardHeader","ModalTeacherName","ModalBlockHeader","SpanText","SpanDiv","SpanPrice","ModalCardBody","ModalSpeaks","ModalLesson","ModalExp","ModalCardFooter","ModalLevelTag","_ref","highlighted","BookButton","FavoriteIcon","teacher","onClose","selectedLevel","dispatch","useDispatch","isAuthenticated","useSelector","state","auth","isBookShown","setIsBookShown","useState","_jsxs","Modal","width","height","top","left","border","background","children","_jsx","avatar_url","GreenDotImage","alt","name","surname","Book","lessons_done","Star","rating","price_per_hour","HeartOn","onClick","removeFavourite","toast","toggleFavorite","className","Array","isArray","languages","join","lesson_info","conditions","experience","Review","reviews","levels","map","level","Lesson","PageContainer","CardsContainer","Card","Avatar","AvatarImage","GreenDot","LoadMoreButton","CardBlock","InfoBlock","CardInfo","ReadMore","CardHeader","TeacherName","BlockHeader","CardBody","Speaks","CardFooter","LevelTag","FavoritesPage","favouriteTeachers","favourites","filteredTeachers","setFilteredTeachers","setLanguages","setLevels","prices","setPrices","selectedLanguage","setSelectedLanguage","setSelectedLevel","selectedPrice","setSelectedPrice","visibleStart","setVisibleStart","visibleEnd","setVisibleEnd","selectedTeacher","setSelectedTeacher","useEffect","favoriteTeachersArray","Object","values","allLanguages","flatMap","filter","value","index","self","indexOf","sort","allLevels","allPrices","a","b","filtered","includes","HeaderPage","Filter","onSelectLanguage","onSelectLevel","onSelectPrice","length","style","textAlign","slice","handleReadMore","id","handleLoadMore","FavoritesCardModal","closeModal"],"sourceRoot":""}