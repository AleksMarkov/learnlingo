{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrmarkov/Documents/GitHub/learnlingo/src/components/Modal/Modal.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Icon from \"../Icon/Icon\";\nimport { Opacity, Modalcont, ModalClose } from \"./Modal.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    children,\n    width,\n    height,\n    onClose,\n    top,\n    left\n  } = _ref;\n  const modalRoot = document.getElementById(\"modal-root\");\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === \"Escape\") onClose();\n    };\n    document.addEventListener(\"keydown\", handleCloseKeyPress);\n    return () => document.removeEventListener(\"keydown\", handleCloseKeyPress);\n  }, [onClose]);\n  const handleOutsideClick = event => {\n    // Optional: Check if the click is outside.\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Opacity, {\n    onClick: handleOutsideClick,\n    children: /*#__PURE__*/_jsxDEV(Modalcont, {\n      $Width: width,\n      $Height: height,\n      onClick: event => event.stopPropagation(),\n      $top: top,\n      $left: left,\n      children: [/*#__PURE__*/_jsxDEV(ModalClose, {\n        type: \"button\",\n        \"aria-label\": \"Close modal\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          width: 18,\n          height: 18,\n          strokeColor: \"var(--text-color)\",\n          name: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), modalRoot);\n};\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useEffect","createPortal","Icon","Opacity","Modalcont","ModalClose","jsxDEV","_jsxDEV","Modal","_ref","_s","children","width","height","onClose","top","left","modalRoot","document","getElementById","handleCloseKeyPress","event","code","addEventListener","removeEventListener","handleOutsideClick","target","currentTarget","onClick","$Width","$Height","stopPropagation","$top","$left","type","strokeColor","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oleksandrmarkov/Documents/GitHub/learnlingo/src/components/Modal/Modal.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Icon from \"../Icon/Icon\";\nimport { Opacity, Modalcont, ModalClose } from \"./Modal.styled\";\n\nconst Modal = ({ children, width, height, onClose, top, left }) => {\n  const modalRoot = document.getElementById(\"modal-root\");\n\n  useEffect(() => {\n    const handleCloseKeyPress = (event) => {\n      if (event.code === \"Escape\") onClose();\n    };\n    document.addEventListener(\"keydown\", handleCloseKeyPress);\n\n    return () => document.removeEventListener(\"keydown\", handleCloseKeyPress);\n  }, [onClose]);\n\n  const handleOutsideClick = (event) => {\n    // Optional: Check if the click is outside.\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Opacity onClick={handleOutsideClick}>\n      <Modalcont\n        $Width={width}\n        $Height={height}\n        onClick={(event) => event.stopPropagation()}\n        $top={top}\n        $left={left}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={\"var(--text-color)\"}\n            name={\"close\"}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,OAAO,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGC,IAAA,IAAqD;EAAAC,EAAA;EAAA,IAApD;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,MAAM;IAAEC,OAAO;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAAP,IAAA;EAC5D,MAAMQ,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EAEvDnB,SAAS,CAAC,MAAM;IACd,MAAMoB,mBAAmB,GAAIC,KAAK,IAAK;MACrC,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAER,OAAO,CAAC,CAAC;IACxC,CAAC;IACDI,QAAQ,CAACK,gBAAgB,CAAC,SAAS,EAAEH,mBAAmB,CAAC;IAEzD,OAAO,MAAMF,QAAQ,CAACM,mBAAmB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;EAC3E,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,MAAMW,kBAAkB,GAAIJ,KAAK,IAAK;IACpC;IACA,IAAIA,KAAK,CAACK,MAAM,KAAKL,KAAK,CAACM,aAAa,EAAE;MACxCb,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,oBAAOb,YAAY,eACjBM,OAAA,CAACJ,OAAO;IAACyB,OAAO,EAAEH,kBAAmB;IAAAd,QAAA,eACnCJ,OAAA,CAACH,SAAS;MACRyB,MAAM,EAAEjB,KAAM;MACdkB,OAAO,EAAEjB,MAAO;MAChBe,OAAO,EAAGP,KAAK,IAAKA,KAAK,CAACU,eAAe,CAAC,CAAE;MAC5CC,IAAI,EAAEjB,GAAI;MACVkB,KAAK,EAAEjB,IAAK;MAAAL,QAAA,gBAEZJ,OAAA,CAACF,UAAU;QAAC6B,IAAI,EAAC,QAAQ;QAAC,cAAW,aAAa;QAACN,OAAO,EAAEd,OAAQ;QAAAH,QAAA,eAClEJ,OAAA,CAACL,IAAI;UACHU,KAAK,EAAE,EAAG;UACVC,MAAM,EAAE,EAAG;UACXsB,WAAW,EAAE,mBAAoB;UACjCC,IAAI,EAAE;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,EACZ7B,QAAQ;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,EACVvB,SACF,CAAC;AACH,CAAC;AAACP,EAAA,CAzCIF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}