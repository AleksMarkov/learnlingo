{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrmarkov/Documents/GitHub/learnlingo/src/components/Modal/Modal.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Icon from \"../Icon/Icon\";\nimport { Opacity, Modalcont, ModalClose } from \"./Modal.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    children,\n    width,\n    height,\n    onClose,\n    top,\n    left\n  } = _ref;\n  // Ensure modalRoot is obtained correctly and is not null.\n  const modalRoot = document.getElementById(\"modal-root\");\n\n  // Ensure onClose is a valid function to prevent runtime errors.\n  if (typeof onClose !== \"function\") {\n    console.error(\"The 'onClose' prop must be a function.\");\n    return null;\n  }\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === \"Escape\") {\n        onClose();\n      }\n    };\n\n    // Add the event listener for the Escape key press.\n    document.addEventListener(\"keydown\", handleCloseKeyPress);\n\n    // Cleanup the event listener on component unmount.\n    return () => {\n      document.removeEventListener(\"keydown\", handleCloseKeyPress);\n    };\n  }, [onClose]);\n\n  // Handle clicks outside the modal.\n  const handleOutsideClick = event => {\n    // Optional: Check if the click is outside.\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return modalRoot ? /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Opacity, {\n    onClick: handleOutsideClick,\n    children: /*#__PURE__*/_jsxDEV(Modalcont, {\n      $Width: width,\n      $Height: height,\n      onClick: event => event.stopPropagation(),\n      $top: top,\n      $left: left,\n      children: [/*#__PURE__*/_jsxDEV(ModalClose, {\n        type: \"button\",\n        \"aria-label\": \"Close modal\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          width: 18,\n          height: 18,\n          strokeColor: \"var(--text-color)\",\n          name: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this), modalRoot) : null; // Return null if modalRoot is not found.\n};\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useEffect","createPortal","Icon","Opacity","Modalcont","ModalClose","jsxDEV","_jsxDEV","Modal","_ref","_s","children","width","height","onClose","top","left","modalRoot","document","getElementById","console","error","handleCloseKeyPress","event","code","addEventListener","removeEventListener","handleOutsideClick","target","currentTarget","onClick","$Width","$Height","stopPropagation","$top","$left","type","strokeColor","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oleksandrmarkov/Documents/GitHub/learnlingo/src/components/Modal/Modal.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Icon from \"../Icon/Icon\";\nimport { Opacity, Modalcont, ModalClose } from \"./Modal.styled\";\n\nconst Modal = ({ children, width, height, onClose, top, left }) => {\n  // Ensure modalRoot is obtained correctly and is not null.\n  const modalRoot = document.getElementById(\"modal-root\");\n\n  // Ensure onClose is a valid function to prevent runtime errors.\n  if (typeof onClose !== \"function\") {\n    console.error(\"The 'onClose' prop must be a function.\");\n    return null;\n  }\n\n  useEffect(() => {\n    const handleCloseKeyPress = (event) => {\n      if (event.code === \"Escape\") {\n        onClose();\n      }\n    };\n\n    // Add the event listener for the Escape key press.\n    document.addEventListener(\"keydown\", handleCloseKeyPress);\n\n    // Cleanup the event listener on component unmount.\n    return () => {\n      document.removeEventListener(\"keydown\", handleCloseKeyPress);\n    };\n  }, [onClose]);\n\n  // Handle clicks outside the modal.\n  const handleOutsideClick = (event) => {\n    // Optional: Check if the click is outside.\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return modalRoot\n    ? createPortal(\n        <Opacity onClick={handleOutsideClick}>\n          <Modalcont\n            $Width={width}\n            $Height={height}\n            onClick={(event) => event.stopPropagation()}\n            $top={top}\n            $left={left}\n          >\n            <ModalClose\n              type=\"button\"\n              aria-label=\"Close modal\"\n              onClick={onClose}\n            >\n              <Icon\n                width={18}\n                height={18}\n                strokeColor={\"var(--text-color)\"}\n                name={\"close\"}\n              />\n            </ModalClose>\n            {children}\n          </Modalcont>\n        </Opacity>,\n        modalRoot\n      )\n    : null; // Return null if modalRoot is not found.\n};\n\nexport default Modal;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,OAAO,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGC,IAAA,IAAqD;EAAAC,EAAA;EAAA,IAApD;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,MAAM;IAAEC,OAAO;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAAP,IAAA;EAC5D;EACA,MAAMQ,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;;EAEvD;EACA,IAAI,OAAOL,OAAO,KAAK,UAAU,EAAE;IACjCM,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;IACvD,OAAO,IAAI;EACb;EAEArB,SAAS,CAAC,MAAM;IACd,MAAMsB,mBAAmB,GAAIC,KAAK,IAAK;MACrC,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;QAC3BV,OAAO,CAAC,CAAC;MACX;IACF,CAAC;;IAED;IACAI,QAAQ,CAACO,gBAAgB,CAAC,SAAS,EAAEH,mBAAmB,CAAC;;IAEzD;IACA,OAAO,MAAM;MACXJ,QAAQ,CAACQ,mBAAmB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMa,kBAAkB,GAAIJ,KAAK,IAAK;IACpC;IACA,IAAIA,KAAK,CAACK,MAAM,KAAKL,KAAK,CAACM,aAAa,EAAE;MACxCf,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,OAAOG,SAAS,gBACZhB,YAAY,eACVM,OAAA,CAACJ,OAAO;IAAC2B,OAAO,EAAEH,kBAAmB;IAAAhB,QAAA,eACnCJ,OAAA,CAACH,SAAS;MACR2B,MAAM,EAAEnB,KAAM;MACdoB,OAAO,EAAEnB,MAAO;MAChBiB,OAAO,EAAGP,KAAK,IAAKA,KAAK,CAACU,eAAe,CAAC,CAAE;MAC5CC,IAAI,EAAEnB,GAAI;MACVoB,KAAK,EAAEnB,IAAK;MAAAL,QAAA,gBAEZJ,OAAA,CAACF,UAAU;QACT+B,IAAI,EAAC,QAAQ;QACb,cAAW,aAAa;QACxBN,OAAO,EAAEhB,OAAQ;QAAAH,QAAA,eAEjBJ,OAAA,CAACL,IAAI;UACHU,KAAK,EAAE,EAAG;UACVC,MAAM,EAAE,EAAG;UACXwB,WAAW,EAAE,mBAAoB;UACjCC,IAAI,EAAE;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,EACZ/B,QAAQ;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,EACVzB,SACF,CAAC,GACD,IAAI,CAAC,CAAC;AACZ,CAAC;AAACP,EAAA,CA9DIF,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAgEX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}