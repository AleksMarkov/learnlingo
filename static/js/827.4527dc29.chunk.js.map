{"version":3,"file":"static/js/827.4527dc29.chunk.js","mappings":"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","sources":["pages/FavoritesPage/FavoritesPage.styled.jsx","pages/FavoritesPage/FavoritesPage.jsx"],"sourcesContent":["//FavoritesPage.styled.jsx\nimport styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  background-color: var(--additional-bg-color);\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 16px;\n\n  @media (max-width: 1253px) {\n    width: 100%;\n    padding: 0 8px;\n  }\n`;\n\nexport const CardsContainer = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  max-height: 714px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 1253px) {\n    width: 100%;\n    padding-left: 5px;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  max-width: 1184px;\n  height: auto;\n  border-radius: 24px;\n  padding: 16px;\n  border: none;\n  gap: 48px;\n  margin-bottom: 16px;\n  color: var(--text-color);\n  background-color: var(--primary-bg-color);\n\n  @media (max-width: 1253px) {\n    flex-direction: column;\n    padding: 8px;\n    gap: 16px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 8px;\n    gap: 8px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 120px;\n  height: 120px;\n  border: 3px solid var(--accent-bg-color);\n  border-radius: 100px;\n  background-color: var(--primary-bg-color);\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 1253px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n\nexport const AvatarImage = styled.div`\n  width: 96px;\n  height: 96px;\n  border-radius: 50%;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n\n  @media (max-width: 1253px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nexport const GreenDot = styled.img`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  top: 19px;\n  left: 85px;\n  border-radius: 50%;\n`;\n\nexport const LoadMoreButton = styled.button`\n  all: unset;\n  display: block;\n  width: 183px;\n  height: 60px;\n  border-radius: 12px;\n  background-color: var(--btn-icon-bg);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n  text-align: center;\n  color: var(--text-color);\n  cursor: pointer;\n\n  &:focus {\n    border-color: var(--btn-hover-bg);\n    outline: none;\n  }\n  &:hover {\n    background-color: var(--btn-hover-bg);\n  }\n`;\n\nexport const CardBlock = styled.div`\n  width: 100%;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const InfoBlock = styled.div`\n  width: 100%;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const CardInfo = styled.div`\n  width: 100%;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 0px;\n`;\n\nexport const ReadMore = styled.div`\n  width: 78px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  text-decoration: underline;\n  cursor: pointer;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const CardHeader = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TeacherName = styled.div`\n  height: 26px;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: center;\n  font-family: Roboto;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n    line-height: 22px;\n  }\n`;\n\nexport const BlockHeader = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  gap: 8px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const SpanText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const SpanDiv = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: rgba(18, 20, 23, 0.2);\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const SpanPrice = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: #38cd3e;\n  margin-right: 58px;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n    margin-right: 16px;\n  }\n`;\n\nexport const CardBody = styled.div`\n  width: 100%;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const ExpandedCardBody = styled.div`\n  width: 100%;\n  gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const ModalLesson = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    text-align: left;\n    color: #8a8a89;\n\n    @media (max-width: 768px) {\n      font-size: 14px;\n      line-height: 20px;\n    }\n  }\n`;\n\nexport const ModalExp = styled.div`\n  width: 100%;\n  max-height: 120px;\n  overflow-y: auto;\n  display: flex;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const ModalCardFooter = styled.div`\n  width: 100%;\n  height: 32px;\n  gap: 8px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const ModalLevelTag = styled.div`\n  height: 32px;\n  gap: 4px;\n  border: 1px solid rgba(18, 20, 23, 0.2);\n  border-radius: 35px;\n  padding: 8px 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 16px;\n  text-align: left;\n  font-size: 14px;\n  font-weight: 500;\n  color: #121417;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n    line-height: 18px;\n  }\n\n  background-color: ${({ highlighted }) =>\n    highlighted ? \"var(--btn-icon-bg)\" : \"transparent\"};\n`;\n\nexport const BookButton = styled.button`\n  all: unset;\n  display: block;\n  width: 232px;\n  height: 60px;\n  border-radius: 12px;\n  background-color: var(--btn-icon-bg);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n  text-align: center;\n  color: var(--text-color);\n  cursor: pointer;\n\n  &:focus {\n    border-color: var(--btn-hover-bg);\n    outline: none;\n  }\n  &:hover {\n    background-color: var(--btn-hover-bg);\n  }\n`;\n\nexport const Speaks = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    color: #8a8a89;\n    text-decoration: none;\n\n    @media (max-width: 768px) {\n      font-size: 14px;\n      line-height: 20px;\n    }\n  }\n\n  .underline-text {\n    text-decoration: underline;\n  }\n`;\n\nexport const Lesson = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 4px;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    text-align: left;\n    color: #8a8a89;\n\n    @media (max-width: 768px) {\n      font-size: 14px;\n      line-height: 20px;\n    }\n  }\n`;\n\nexport const CardFooter = styled.div`\n  width: 100%;\n  height: 32px;\n  gap: 8px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const LevelTag = styled.div`\n  height: 32px;\n  gap: 4px;\n  border: 1px solid rgba(18, 20, 23, 0.2);\n  border-radius: 35px;\n  padding: 8px 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 16px;\n  text-align: left;\n  font-size: 14px;\n  font-weight: 500;\n  color: #121417;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n    line-height: 18px;\n  }\n\n  background-color: ${({ highlighted }) =>\n    highlighted ? \"var(--btn-icon-bg)\" : \"transparent\"};\n`;\n\nexport const FavoriteIcon = styled.img`\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","//FavoritesPage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { removeFavourite } from \"../../redux/favouritesSlice\";\nimport {\n  PageContainer,\n  CardsContainer,\n  Card,\n  CardBlock,\n  InfoBlock,\n  CardHeader,\n  TeacherName,\n  BlockHeader,\n  CardInfo,\n  ReadMore,\n  CardBody,\n  Speaks,\n  Lesson,\n  CardFooter,\n  Avatar,\n  AvatarImage,\n  GreenDot,\n  LevelTag,\n  LoadMoreButton,\n  FavoriteIcon,\n  SpanText,\n  SpanDiv,\n  SpanPrice,\n  ExpandedCardBody,\n  ModalLesson,\n  ModalExp,\n  ModalCardFooter,\n  ModalLevelTag,\n  BookButton,\n} from \"./FavoritesPage.styled\";\nimport HeartOn from \"../../assets/svg/heartOn.svg\";\nimport Star from \"../../assets/svg/Star.svg\";\nimport Book from \"../../assets/svg/book-open-01.svg\";\nimport GreenDotImage from \"../../assets/svg/Group 82.svg\";\nimport HeaderPage from \"../HeaderPage/HeaderPage\";\nimport Filter from \"../../components/Filter/Filter\";\nimport Review from \"../../components/Review/Review\";\nimport BookLesson from \"../../components/BookLesson/BookLesson\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst FavoritesPage = () => {\n  const dispatch = useDispatch();\n  const favouriteTeachers = useSelector(\n    (state) => state.favourites.favouriteTeachers\n  );\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const [isBookShown, setIsBookShown] = useState(false);\n\n  const [filteredTeachers, setFilteredTeachers] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [prices, setPrices] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [selectedPrice, setSelectedPrice] = useState(\"\");\n  const [visibleStart, setVisibleStart] = useState(0);\n  const [visibleEnd, setVisibleEnd] = useState(3);\n  const [expandedTeacherId, setExpandedTeacherId] = useState(null);\n\n  useEffect(() => {\n    const favoriteTeachersArray = Object.values(favouriteTeachers);\n    setFilteredTeachers(favoriteTeachersArray);\n\n    const allLanguages = [\n      \"All\",\n      ...favoriteTeachersArray\n        .flatMap((teacher) => teacher.languages)\n        .filter((value, index, self) => self.indexOf(value) === index)\n        .sort(),\n    ];\n    setLanguages(allLanguages);\n\n    const allLevels = [\n      \"All\",\n      ...favoriteTeachersArray\n        .flatMap((teacher) => teacher.levels)\n        .filter((value, index, self) => self.indexOf(value) === index)\n        .sort(),\n    ];\n    setLevels(allLevels);\n\n    const allPrices = favoriteTeachersArray\n      .map((teacher) => teacher.price_per_hour)\n      .filter((value, index, self) => self.indexOf(value) === index)\n      .sort((a, b) => a - b);\n    setPrices(allPrices);\n  }, [favouriteTeachers]);\n\n  useEffect(() => {\n    let filtered = favouriteTeachers;\n\n    if (selectedLanguage && selectedLanguage !== \"All\") {\n      filtered = filtered.filter((teacher) =>\n        teacher.languages.includes(selectedLanguage)\n      );\n    }\n\n    if (selectedLevel && selectedLevel !== \"All\") {\n      filtered = filtered.filter((teacher) =>\n        teacher.levels.includes(selectedLevel)\n      );\n    }\n\n    if (selectedPrice) {\n      filtered = filtered.filter(\n        (teacher) => teacher.price_per_hour === selectedPrice\n      );\n    }\n\n    setFilteredTeachers(filtered);\n    setVisibleStart(0);\n    setVisibleEnd(4);\n  }, [selectedLanguage, selectedLevel, selectedPrice, favouriteTeachers]);\n\n  const handleLoadMore = () => {\n    if (visibleEnd < filteredTeachers.length) {\n      setVisibleEnd(visibleEnd + 4);\n    }\n  };\n\n  const handleReadMore = (teacherId) => {\n    setExpandedTeacherId(teacherId === expandedTeacherId ? null : teacherId);\n  };\n\n  const toggleFavorite = (teacher) => {\n    if (!isAuthenticated) {\n      toast.error(\"This functionality is available only to authorized users.\");\n      return;\n    }\n    dispatch(removeFavourite(teacher));\n  };\n\n  return (\n    <PageContainer>\n      <HeaderPage />\n      <Filter\n        languages={languages}\n        levels={levels}\n        prices={prices}\n        selectedLanguage={selectedLanguage}\n        selectedLevel={selectedLevel}\n        selectedPrice={selectedPrice}\n        onSelectLanguage={setSelectedLanguage}\n        onSelectLevel={setSelectedLevel}\n        onSelectPrice={setSelectedPrice}\n      />\n      {filteredTeachers.length === 0 ? (\n        <p style={{ textAlign: \"center\" }}>\n          There are no teachers in the database that meet the search criteria.\n        </p>\n      ) : (\n        <CardsContainer>\n          {filteredTeachers.slice(visibleStart, visibleEnd).map((teacher) => (\n            <Card key={teacher.id}>\n              <Avatar>\n                <AvatarImage src={teacher.avatar_url} />\n                <GreenDot src={GreenDotImage} alt=\"green dot\" />\n              </Avatar>\n              <CardBlock>\n                <InfoBlock>\n                  <CardInfo>\n                    <CardHeader>\n                      <TeacherName>\n                        {teacher.name} {teacher.surname}\n                      </TeacherName>\n                      <BlockHeader>\n                        <img\n                          src={Book}\n                          width=\"16\"\n                          height=\"16\"\n                          alt=\"open book\"\n                        />\n                        <SpanText>Lessons online</SpanText>\n                        <SpanDiv> | </SpanDiv>\n                        <SpanText>Lessons done:</SpanText>{\" \"}\n                        {teacher.lessons_done}\n                        <SpanDiv> | </SpanDiv>\n                        <SpanText>Rating:</SpanText>{\" \"}\n                        <img src={Star} width=\"16\" height=\"16\" alt=\"star\" />\n                        {teacher.rating}\n                        <SpanDiv> | </SpanDiv>\n                        <SpanText>Price / 1 hour: </SpanText>{\" \"}\n                        <SpanPrice>{teacher.price_per_hour}$</SpanPrice>\n                        <FavoriteIcon\n                          src={HeartOn}\n                          width=\"26\"\n                          height=\"26\"\n                          alt=\"heart\"\n                          onClick={() => toggleFavorite(teacher)}\n                        />\n                      </BlockHeader>\n                    </CardHeader>\n                    <CardBody>\n                      <Speaks>\n                        <span>Languages Speaks:</span>\n                        <div className=\"underline-text\">\n                          {Array.isArray(teacher.languages)\n                            ? teacher.languages.join(\", \")\n                            : teacher.languages}\n                        </div>\n                      </Speaks>\n                      <Lesson>\n                        <span>Lesson Info:</span> {teacher.lesson_info}\n                      </Lesson>\n                      {expandedTeacherId === teacher.id && (\n                        <ExpandedCardBody>\n                          <ModalLesson>\n                            <span>Conditions:</span> {teacher.conditions}\n                          </ModalLesson>\n                          <ModalExp>{teacher.experience}</ModalExp>\n                          <Review reviews={teacher.reviews} />\n                          <ModalCardFooter>\n                            {teacher.levels.map((level) => (\n                              <ModalLevelTag\n                                key={level}\n                                highlighted={level === selectedLevel}\n                              >\n                                {level}\n                              </ModalLevelTag>\n                            ))}\n                          </ModalCardFooter>\n                          <BookButton onClick={() => setIsBookShown(true)}>\n                            Book trial lesson\n                          </BookButton>\n                          {isBookShown && (\n                            <BookLesson\n                              teacher={teacher}\n                              onClose={() => setIsBookShown(false)}\n                            />\n                          )}\n                        </ExpandedCardBody>\n                      )}\n                    </CardBody>\n                  </CardInfo>\n                  {expandedTeacherId !== teacher.id && (\n                    <CardFooter>\n                      {teacher.levels.map((level) => (\n                        <LevelTag\n                          key={level}\n                          highlighted={level === selectedLevel}\n                        >\n                          {level}\n                        </LevelTag>\n                      ))}\n                    </CardFooter>\n                  )}\n                  <ReadMore onClick={() => handleReadMore(teacher.id)}>\n                    {expandedTeacherId === teacher.id\n                      ? \"Read less\"\n                      : \"Read more\"}\n                  </ReadMore>\n                </InfoBlock>\n              </CardBlock>\n            </Card>\n          ))}\n        </CardsContainer>\n      )}\n      {visibleEnd < filteredTeachers.length && (\n        <LoadMoreButton onClick={handleLoadMore}>Load more</LoadMoreButton>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["PageContainer","styled","CardsContainer","Card","Avatar","AvatarImage","props","src","GreenDot","LoadMoreButton","CardBlock","InfoBlock","CardInfo","ReadMore","CardHeader","TeacherName","BlockHeader","SpanText","SpanDiv","SpanPrice","CardBody","ExpandedCardBody","ModalLesson","ModalExp","ModalCardFooter","ModalLevelTag","_ref","highlighted","BookButton","Speaks","Lesson","CardFooter","LevelTag","_ref2","FavoriteIcon","FavoritesPage","dispatch","useDispatch","favouriteTeachers","useSelector","state","favourites","isAuthenticated","auth","isBookShown","setIsBookShown","useState","filteredTeachers","setFilteredTeachers","languages","setLanguages","levels","setLevels","prices","setPrices","selectedLanguage","setSelectedLanguage","selectedLevel","setSelectedLevel","selectedPrice","setSelectedPrice","visibleStart","setVisibleStart","visibleEnd","setVisibleEnd","expandedTeacherId","setExpandedTeacherId","useEffect","favoriteTeachersArray","Object","values","allLanguages","flatMap","teacher","filter","value","index","self","indexOf","sort","allLevels","allPrices","map","price_per_hour","a","b","filtered","includes","_jsxs","children","_jsx","HeaderPage","Filter","onSelectLanguage","onSelectLevel","onSelectPrice","length","style","textAlign","slice","avatar_url","GreenDotImage","alt","name","surname","Book","width","height","lessons_done","Star","rating","HeartOn","onClick","removeFavourite","toast","toggleFavorite","className","Array","isArray","join","lesson_info","id","conditions","experience","Review","reviews","level","BookLesson","onClose","handleReadMore","teacherId","handleLoadMore"],"sourceRoot":""}